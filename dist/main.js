!function(){"use strict";function t(t,e){if("number"!=typeof t||"number"!=typeof e)throw new Error("–£–∫–∞–∑–∞–Ω–æ –Ω–µ —á–∏—Å–ª–æ!");if(t>=e**2)throw new Error("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å");let a="center";const s=e-1,i=e**2-1,r=e**2-e;switch(t<s&&(a="top"),(t+1)%e==0&&(a="right"),t>r&&t<i&&(a="bottom"),t%e==0&&(a="left"),t){case 0:a="top-left";break;case s:a="top-right";break;case i:a="bottom-right";break;case r:a="bottom-left"}return a}const e={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain"},a={};let s=1;for(const t of Object.values(e))a[`Level ${s}`]=t,s+=1;var i=e,r={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"};class o{constructor(t){this.team=t}}const l=(t,e)=>{const a=t;for(let s=0;s<e;s+=1)a.attack=Math.round(1.3*t.attack),a.defence=Math.round(1.3*t.defence);return a};function n(t,e,a){const s=[],i=function*(t,e){const a=t.length;for(;;){const s=Math.floor(Math.random()*a),i=Math.floor(1+Math.random()*e);let r=new(0,t[s])(i);i>1&&(r=l(r,i)),yield r}}(t,e);for(let t=0;t<a;t+=1){const t=i.next().value;s.push(t)}return new o(s)}class c{constructor(t,e){if("number"!=typeof e)throw new Error("position must be a number");this.character=t,this.position=e}}class h{constructor(){this.activeMove="player",this.playerLvl=1,this.points=0,this.historyPoints=[],this.activeCharacter=!1,this.possibleAttackRange=[],this.possibleMoveRange=[]}changeMove(){const t="player"===this.activeMove?"PC":"player";this.activeMove=t}clearGameState(){this.activeCharacter=!1,this.possibleAttackRange=[],this.possibleMoveRange=[]}static calcPossibleCellsAttack(t,e,a){const s=h.shiftAttackTop(t,e,a),i=h.shiftAttackRight(t,e,a),r=h.shiftAttackDown(t,e,a),o=h.shiftAttackLeft(t,e,a),l=i-o,n=r+(i-t),c=[];for(let a=s-(t-o);a<=n;a+=e)for(let e=0;e<=l;e+=1){const s=a+e;s!==t&&c.push(s)}return c}static shiftAttackTop(t,e,a){const s=t-e*a;if(s>0)return s;let i=t;for(let a=t;a>=e;a-=e)i-=e;return i}static shiftAttackRight(t,e,a){const s=t+a;let i,r=t;for(let t=0;t<e;t+=1)if(0==(r+t+1)%e){r+=t;break}return i=r>s?s:r,i}static shiftAttackDown(t,e,a){const s=t+e*a;if(s<e**2)return s;let i=t;for(let a=t;a<e**2-e;a+=e)i+=e;return i}static shiftAttackLeft(t,e,a){const s=t-a;let i,r=t;for(let t=1;t<e;t+=1)if(0==(r-t)%e){r-=t;break}return i=r<s?s:r,i}static calcPossibleCellsMove(t,e,a,s={top:!0,right:!0,down:!0,left:!0}){const i=[t,e,a,s],r=h.calcPossibleSteps(...i).filter((t=>0!==t)).map((e=>e+t));return r.sort(((t,e)=>t-e)),r}static calcPossibleSteps(t,e,a,s){const i=[];for(let r=1;r<=a;r+=1){const a=h.calcPossibleRangesForStep(t,e,r,s);i.push(...a)}return i}static calcPossibleRangesForStep(t,e,a,s){const{top:i,right:r,down:o,left:l}=s;let n=!1,c=!1,h=!1,m=!1;const g=[];return i&&t>=e*a&&(l&&r&&g.push(-e*a),n=!0),l&&t%e>=a&&(i&&o&&g.push(-1*a),h=!0),o&&t<e**2-e*a&&(l&&r&&g.push(e*a),c=!0),r&&(t+a)%e>=a&&(i&&o&&g.push(1*a),m=!0),n&&h&&g.push((-e-1)*a),n&&m&&g.push((1-e)*a),c&&m&&g.push((e+1)*a),c&&h&&g.push((e-1)*a),g}}const m={top:!0,right:!1,down:!0,left:!0},g=t=>{const e=t.length;return t[Math.floor(Math.random()*e)]},d=(t,e)=>{const a=[];for(const t of e)a.push(t.position);const s=[];for(const e of t)a.includes(e)||s.push(e);return s};class v{constructor(t,e="generic"){if(this.level=t,this.attack=0,this.defence=0,this.health=50,this.type=e,this.moveRange=0,this.attackRange=0,"Character"===new.target.name)throw new Error("–ù–µ–≤–µ—Ä–Ω–æ –≤—ã–∑–≤–∞–Ω –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä!")}}class P extends v{constructor(t){super(t,"bowman"),this.attack=25,this.defence=25,this.moveRange=2,this.attackRange=2}}class u extends v{constructor(t){super(t,"swordsman"),this.attack=40,this.defence=10,this.moveRange=4,this.attackRange=1}}class C extends v{constructor(t){super(t,"magician"),this.attack=10,this.defence=40,this.moveRange=1,this.attackRange=4}}class p extends v{constructor(t){super(t,"vampire"),this.attack=25,this.defence=25,this.moveRange=2,this.attackRange=2}}class y extends v{constructor(t){super(t,"undead"),this.attack=40,this.defence=10,this.moveRange=4,this.attackRange=1}}class S extends v{constructor(t){super(t,"daemon"),this.attack=10,this.defence=40,this.moveRange=1,this.attackRange=4}}class f{constructor(t,e){this.gamePlay=t,this.stateService=e,this.gameState=new h,this.gamePlay.cursors=r,this.gamePlay.themes=Object.values(i)}init(){this.gamePlay.drawUi(this.gamePlay.themes[0]),this.createPossibleCharacters(),this.registerEvent(),this.loadHistoryPoints(),this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.gamePlay.showCurrentPoints(0),this.calcField(),this.createStartingPosition()}calcField(){const{boardSize:t}=this.gamePlay,e=t**2;this.gamePlay.fieldSize=e,this.gamePlay.firstCellForPC=t-2}createPossibleCharacters(){this.gamePlay.charactersForPlayer=[P,u,C],this.gamePlay.charactersForPC=[p,y,S]}createStartingPosition(){const t=f.createTeam(this.gamePlay.charactersForPlayer,this.gamePlay.maxStartLvl,this.gamePlay.countCharacterTeam),e=f.createTeam(this.gamePlay.charactersForPC,this.gamePlay.maxStartLvl,this.gamePlay.countCharacterTeam),a=f.calcPositioningTeam(0,this.gamePlay.fieldSize,this.gamePlay.boardSize,t),s=f.calcPositioningTeam(this.gamePlay.firstCellForPC,this.gamePlay.fieldSize,this.gamePlay.boardSize,e),i=f.mergeTeams(a,s);this.savePositionTeam(i),this.positioning(i)}static mergeTeams(t,e){return{teamPlayer:t,teamPC:e}}static createTeam(t,e,a){return n(t,e,a)}static calcPositioningTeam(t,e,a,s){const i=f.creatingArrayFromCharacter(t,e,a);return f.creatinfArrayPositions(i,s.team)}savePositionTeam(t){this.gameState.teams=t}registerEvent(){this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.onNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGame.bind(this))}clearEvent(){this.gamePlay.cellEnterListeners=[],this.gamePlay.cellLeaveListener=[],this.gamePlay.cellClickListeners=[]}static creatingArrayFromCharacter(t,e,a){const s=[];for(let i=t;i<e;i+=a)s.push(i),s.push(i+1);return s}static creatinfArrayPositions(t,e){const a=[];for(let s=0;s<e.length;s+=1){const i=t.length,r=Math.floor(Math.random()*i),o=t.splice(r,1),l=Number(o[0]),n=new c(e[s],l);a.push(n)}return a}positioning(t){const e=[...t.teamPlayer,...t.teamPC];this.gamePlay.redrawPositions(e)}onCellClick(t){if("PC"===this.gameState.activeMove)return void this.gamePlay.showError("–°–µ–π—á–∞—Å –Ω–µ –≤–∞—à —Ö–æ–¥!");const e=this.gameState.teams.teamPC.find((e=>e.position===t))||!1,a=this.gameState.teams.teamPlayer.find((e=>e.position===t))||!1,{activeCharacter:s}=this.gameState;a?this.changeCharacter(t,a):s&&e?this.gameState.possibleAttackRange.indexOf(t)>-1?this.attackCharacter(s,e):this.gamePlay.showError("–í—Ä–∞–≥ —Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ!"):!s||e||a?!s&&e&&this.gamePlay.showError("–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–≤–æ–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!"):this.gameState.possibleMoveRange.indexOf(t)>-1?this.moveCharacter(s,t):this.gamePlay.showError("–°–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ, —è —Å—é–¥–∞ –Ω–µ –¥–æ–π–¥—É!")}onCellEnter(t){const e=this.gameState.teams.teamPlayer.find((e=>e.position===t))||this.gameState.teams.teamPC.find((e=>e.position===t));this.gameState.activeCharacter&&this.initActiveCell(t),e&&this.createMessage(e.character,t)}createMessage(t,e){const a=`üéñ ${t.level} ‚ù§ ${t.health} ‚öî ${t.attack} üõ° ${t.defence}`;this.gamePlay.showCellTooltip(a,e)}onCellLeave(t){this.gamePlay.hideCellTooltip(t),this.clearCellFromDecoration(t)}initActiveCell(t){if(t===this.gameState.activeCharacter.position)return;const e=this.gameState.teams.teamPlayer.find((e=>t===e.position))||!1,a=this.gameState.teams.teamPC.find((e=>t===e.position))||!1;e?this.activeCellForChangeCharacter():a?this.gameState.possibleAttackRange.indexOf(t)>=0?this.activeCellForAttack(t):this.activeInacessibleCell():this.gameState.possibleMoveRange.indexOf(t)>=0?this.activeCellForMove(t):this.activeInacessibleCell(t)}activeCellForChangeCharacter(){this.gamePlay.setCursor(this.gamePlay.cursors.pointer)}activeCellForAttack(t){this.gamePlay.setCursor(this.gamePlay.cursors.crosshair),this.gamePlay.selectCell(t,"red")}activeCellForMove(t){this.gamePlay.setCursor(this.gamePlay.cursors.pointer),this.gamePlay.selectCell(t,"green")}activeInacessibleCell(){this.gamePlay.setCursor(this.gamePlay.cursors.notallowed)}calcCellsForMove(){if(!this.gameState.activeCharacter)return;const{character:t,position:e}=this.gameState.activeCharacter,a=t.moveRange,s=h.calcPossibleCellsMove(e,this.gamePlay.boardSize,a);this.gameState.possibleMoveRange=s}calcCellsForAttack(){if(!this.gameState.activeCharacter)return;const{character:t,position:e}=this.gameState.activeCharacter,a=t.attackRange,s=h.calcPossibleCellsAttack(e,this.gamePlay.boardSize,a);this.gameState.possibleAttackRange=s}moveCharacter(t,e){const a=t,s=t.position,i=e,r=this.returnTeam(t),o=r.indexOf(t);a.position=i,r.splice(o,1,a),this.gameState.clearGameState(),this.clearCellFromDecoration(s),this.clearCellFromDecoration(i),this.positioning(this.gameState.teams),"newLvl"===this.gameState.activeMove?this.gameState.activeMove="player":this.gameState.changeMove(),"PC"===this.gameState.activeMove&&this.actionPC()}attackCharacter(t,e){const a=this.calcDamage(t,e);this.gamePlay.showDamage(a,t,e,this.updateCharacters.bind(this))}calcDamage(t,e){const a=Math.round(Math.max((t.character.attack-e.character.defence)/2,.2*t.character.attack));return"player"===this.gameState.activeMove?this.gameState.points+=a:(this.gameState.points-=a,this.gameState.points<0&&(this.gameState.points=0)),this.gamePlay.showCurrentPoints(this.gameState.points),a}changeCharacter(t,e){this.gameState.activeCharacter&&this.gamePlay.deselectCell(this.gameState.activeCharacter.position),this.gamePlay.selectCell(t),this.gameState.activeCharacter=e,this.calcCellsForMove(),this.calcCellsForAttack(),this.gamePlay.showCellsForMove(this.gameState.possibleMoveRange),this.gamePlay.showCellsForAttack(this.gameState.possibleAttackRange,this.gameState.teams.teamPC)}clearCellFromDecoration(t){this.gamePlay.setCursor(this.gamePlay.cursors.auto),t!==this.gameState.activeCharacter.position&&this.gamePlay.deselectCell(t)}updateCharacters(t,e,a){const s=a.character.health-t;s<=0?this.deathCharacter(a):a.character.health=s,this.gameState.clearGameState(),this.clearCellFromDecoration(e.position),this.clearCellFromDecoration(a.position),"newLvl"===this.gameState.activeMove?this.gameState.activeMove="player":this.gameState.changeMove(),this.positioning(this.gameState.teams),"PC"===this.gameState.activeMove&&this.actionPC()}returnTeam(t){return this.gameState.teams.teamPlayer.includes(t)?this.gameState.teams.teamPlayer:this.gameState.teams.teamPC}deathCharacter(t){const e=this.returnTeam(t),a=e.indexOf(t);e.splice(a,1),0===this.gameState.teams.teamPlayer.length&&this.gameOver(),0===this.gameState.teams.teamPC.length&&this.levelUp()}actionPC(){this.gamePlay.clearCellsForMove(),this.gamePlay.clearCellsForAttack();const t=((t,e)=>{const a=t.teamPlayer,s=[...t.teamPlayer,...t.teamPC],i=(t=>{const e=t,a=[];for(let t=e.length;t>0;t-=1){const s=Math.floor(Math.random()*t);a.push(...e.splice(s,1))}return e.push(...a),e})(t.teamPC),r=((t,e,a)=>{let s={attacker:null,target:null,valueAttack:null,diffAttackDef:null};for(const i of t){const t=[i.position,a,i.character.attackRange],r=h.calcPossibleCellsAttack(...t);for(const t of e)if(r.includes(t.position)){const e=i.character.attack-t.character.defence,a=i.character.attack;(e>s.diffAttackDef||a>s.valueAttack)&&(s={attacker:i,target:t,valueAttack:a,diffAttackDef:e})}}return!!s.attacker&&{type:"attack",attacker:s.attacker,target:s.target}})(i,a,e);if(r)return r;const o=((t,e,a)=>{for(const s of t){const t=s,i=[t.position,a,t.character.moveRange,m],r=h.calcPossibleCellsMove(...i),o=d(r,e);if(o.length>0)return{type:"move",mover:t,target:g(o)}}return!1})(i,s,e);if(o)return o;return((t,e,a)=>{for(const s of t){const t=[s.position,a,s.character.moveRange],i=h.calcPossibleCellsMove(...t),r=d(i,e);if(r.length>0)return{type:"move",mover:s,target:g(r)}}return!1})(i,s,e)||!1})(this.gameState.teams,this.gamePlay.boardSize);if(t||(this.gameState.activeMove="player"),"attack"===t.type){const{attacker:e,target:a}=t;this.attackCharacter(e,a)}if("move"===t.type){const{mover:e,target:a}=t;this.moveCharacter(e,a)}}levelUp(){this.gameState.playerLvl<=999?(this.gameState.playerLvl+=1,this.startNewLvl()):(this.gamePlay.showMessage(`–£—Ä–∞! –ü–æ–±–µ–¥–∞! –¢—ã –Ω–∞–±—Ä–∞–ª ${this.gameState.points} –æ—á–∫–æ–≤!`),this.addItemForHistoryPoints(),this.clearEvent())}startNewLvl(){this.addItemForHistoryPoints();const t=this.gamePlay.maxStartLvl+(this.gameState.playerLvl-1),e=n(this.gamePlay.charactersForPC,t,this.gamePlay.countCharacterTeam),a=function(t){const e=[];for(const a of t){const{char:t}=a,{health:s}=t,i=s+80,r=Math.round(Math.max(t.attack,t.attack*((80+s)/100))),o=Math.round(Math.max(t.defence,t.defence*((80+s)/100)));t.attack=r,t.defence=o,t.health=i>100?100:i,t.level+=1,e.push(t)}return new o(e)}(this.gameState.teams.teamPlayer),s=f.calcPositioningTeam(this.gamePlay.firstCellForPC,this.gamePlay.fieldSize,this.gamePlay.boardSize,e),i=f.calcPositioningTeam(0,this.gamePlay.fieldSize,this.gamePlay.boardSize,a);this.gameState.teams={teamPC:s,teamPlayer:i},this.gameState.activeMove="newLvl",this.gamePlay.drawUi(this.selectTheme()),this.positioning(this.gameState.teams),this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.gamePlay.showCurrentPoints(this.gameState.points)}gameOver(){this.gamePlay.showMessage(`–¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª... –ù–æ —É—Å–ø–µ–ª –Ω–∞–±—Ä–∞—Ç—å ${this.gameState.points} –æ—á–∫–æ–≤!`),this.addItemForHistoryPoints(),this.clearEvent()}addItemForHistoryPoints(){const t=Date.now(),e={points:this.gameState.points,date:t},{historyPoints:a}=this.gameState;a.push(e),a.sort(((t,e)=>e.points-t.points)),a.length>5&&a.pop(),this.saveHistoryPoints()}saveHistoryPoints(){const t=JSON.stringify(this.gameState.historyPoints);t&&localStorage.setItem("historyPoints",t)}loadHistoryPoints(){const t=JSON.parse(localStorage.getItem("historyPoints"));t&&(this.gameState.historyPoints=t)}onNewGame(){this.gameState.activeCharacter&&(this.gamePlay.deselectCell(this.gameState.activeCharacter.position),this.gameState.clearGameState(),this.gamePlay.clearCellsForMove(),this.gamePlay.clearCellsForAttack()),this.gameState.points=0,this.gameState.activeMove="player",this.gameState.playerLvl=1,this.addItemForHistoryPoints(),this.gameState.activeCharacter&&this.gamePlay.deselectCell(this.gameState.activeCharacter.position),0===this.gamePlay.cellEnterListeners.length&&this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),0===this.gamePlay.cellLeaveListeners.length&&this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),0===this.gamePlay.cellClickListeners.length&&this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.drawUi(this.selectTheme()),this.gamePlay.showCurrentPoints(0),this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.createStartingPosition()}onSaveGame(){this.addItemForHistoryPoints(),this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.stateService.save(this.gameState)}onLoadGame(){this.gamePlay.clearCellsForMove(),this.gamePlay.clearCellsForAttack();const t=this.stateService.load();if(t instanceof Error)this.gamePlay.showError(t.message);else{this.saveHistoryPoints(),this.gameState.activeCharacter&&this.gamePlay.deselectCell(this.gameState.activeCharacter.position);for(const e in t)void 0!==t[e]&&(this.gameState[e]=null,this.gameState[e]=t[e]);this.gamePlay.showCurrentPoints(this.gameState.points),0===this.gamePlay.cellEnterListeners.length&&this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),0===this.gamePlay.cellLeaveListeners.length&&this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),0===this.gamePlay.cellClickListeners.length&&this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.drawUi(this.selectTheme()),this.positioning(this.gameState.teams),this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.gamePlay.showCurrentPoints(this.gameState.points),this.gameState.activeCharacter&&this.onCellClick(this.gameState.activeCharacter.position),"PC"===this.gameState.activeMove&&this.actionPC()}}selectTheme(){const t=this.gamePlay.themes.length,e=(this.gameState.playerLvl-1)%t;return this.gamePlay.themes[e]}resetGameState(){this.gameState.clearGameState(),this.gameState.activeMove="player",this.gameState.playerLvl=1,this.gameState.points=0,this.gamePlay.showMaxPoints(this.gameState.historyPoints[0]),this.gamePlay.showCurrentPoints(0),this.gameState.teams=null}}const L=new class{constructor(){this.boardSize=8,this.countCharacterTeam=5,this.maxStartLvl=3,this.maxPossibLvl=999,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[],this.cellMaxPoints=null,this.cellCurrentPoints=null,this.message=null}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUi(e){this.checkBinding(),this.container.innerHTML='\n\t\t\t<div class="controls">\n\t\t\t\t<button data-id="action-restart" class="btn">New Game</button>\n\t\t\t\t<button data-id="action-save" class="btn">Save Game</button>\n\t\t\t\t<button data-id="action-load" class="btn">Load Game</button>\n\t\t\t</div>\n\t\t\t<div class="points">\n\t\t\t\t<div data-id="points-current" class="points-pole">\n\t\t\t\t\t<span class="points-pole-descrip">–ù–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤: </span>\n\t\t\t\t\t<span data-id="points-current-value" class="points-pole-value"></span>\n\t\t\t\t</div>\n\t\t\t\t<div data-id="points-max" class="points-pole">\n\t\t\t\t\t<span class="points-pole-descrip">–ú–∞–∫—Å–∏–º—É–º –æ—á–∫–æ–≤: </span>\n\t\t\t\t\t<span data-id="points-max-value" class="points-pole-value"></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div id-data="message" class="message hidden-item">\n\t\t\t\t–¢—É—Ç –±—É–±—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤–º–µ—Å—Ç–æ –∞–ª–µ—Ä—Ç–æ–≤\n\t\t\t</div>\n\t\t\t<div class="board-container">\n\t\t\t\t<div data-id="board" class="board"></div>\n\t\t\t</div>\n\t\t',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(t=>this.onNewGameClick(t))),this.saveGameEl.addEventListener("click",(t=>this.onSaveGameClick(t))),this.loadGameEl.addEventListener("click",(t=>this.onLoadGameClick(t))),this.cellMaxPoints=this.container.querySelector("[data-id=points-max]"),this.cellCurrentPoints=this.container.querySelector("[data-id=points-current]"),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const a=document.createElement("div");a.classList.add("cell","map-tile",`map-tile-${t(e,this.boardSize)}`),a.addEventListener("mouseenter",(t=>this.onCellEnter(t))),a.addEventListener("mouseleave",(t=>this.onCellLeave(t))),a.addEventListener("click",(t=>this.onCellClick(t))),this.boardEl.appendChild(a)}this.cells=Array.from(this.boardEl.children)}redrawPositions(t){for(const t of this.cells)t.innerHTML="";for(const a of t){const t=this.boardEl.children[a.position],s=document.createElement("div");s.classList.add("character",a.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((e=a.character.health)<15?"critical":e<50?"normal":"high")),r.style.width=`${a.character.health}%`,i.appendChild(r),s.appendChild(i),t.appendChild(s)}var e}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}addNewGameListener(t){this.newGameListeners.push(t)}addSaveGameListener(t){this.saveGameListeners.push(t)}addLoadGameListener(t){this.loadGameListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach((t=>t.call(null,e)))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach((t=>t.call(null,e)))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach((t=>t.call(null,e)))}onNewGameClick(t){t.preventDefault(),this.newGameListeners.forEach((t=>t.call(null)))}onSaveGameClick(t){t.preventDefault(),this.saveGameListeners.forEach((t=>t.call(null)))}onLoadGameClick(t){t.preventDefault(),this.loadGameListeners.forEach((t=>t.call(null)))}showError(t){return new Promise((e=>{const a=this.container.querySelector("[id-data=message]");a.textContent=t,a.classList.add("message-error"),a.classList.remove("hidden-item"),setTimeout((()=>{e(a.classList.add("hidden-item"))}),1e3)}))}showMessage(t){return new Promise((e=>{const a=this.container.querySelector("[id-data=message]");a.textContent=t,a.classList.remove("message-error"),a.classList.remove("hidden-item"),setTimeout((()=>{e(a.classList.add("hidden-item"))}),3e3)}))}selectCell(t,e="yellow"){this.deselectCell(t),this.cells[t].classList.add("selected",`selected-${e}`)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter((t=>t.startsWith("selected"))))}showCellTooltip(t,e){this.cells[e].title=t}hideCellTooltip(t){this.cells[t].title=""}showDamage(t,e,a,s){return new Promise((i=>{const r=this.cells[a.position],o=document.createElement("span");o.textContent=t,o.classList.add("damage"),r.appendChild(o),o.addEventListener("animationend",(()=>{r.removeChild(o),i(s(t,e,a))}))}))}showCurrentPoints(t){const e=t||0;this.cellCurrentPoints.querySelector("[data-id=points-current-value]").textContent=e}showMaxPoints(t){const e=t?.points||0;this.cellMaxPoints.querySelector("[data-id=points-max-value]").textContent=e}showCellsForMove(t){this.clearCellsForMove();for(const e of t){const t=this.cells[e];t.querySelector(".character")||t.classList.add("move")}}clearCellsForMove(){const t=this.container.querySelectorAll(".move");for(const e of t)e.classList.remove("move")}showCellsForAttack(t,e){this.clearCellsForAttack();for(const a of t){const t=this.cells[a].querySelector(".character");if(t)for(const a of e)t.classList.contains(a.character.type)&&t.classList.add("attack")}}clearCellsForAttack(){const t=this.container.querySelectorAll(".attack");for(const e of t)e.classList.remove("attack")}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}};L.bindToDOM(document.querySelector("#game-container"));const k=new class{constructor(t){this.storage=t}save(t){this.storage.setItem("gameState",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("gameState"))}catch(t){throw new Error("Invalid state")}}}(localStorage);new f(L,k).init()}();
